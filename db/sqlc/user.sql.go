// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: user.sql

package db

import (
	"context"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (
  id,
  email
) VALUES (
  $1, $2
) RETURNING id, email, created_at
`

type CreateUserParams struct {
	ID    string `json:"id"`
	Email string `json:"email"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRow(ctx, createUser, arg.ID, arg.Email)
	var i User
	err := row.Scan(&i.ID, &i.Email, &i.CreatedAt)
	return i, err
}

const getUser = `-- name: GetUser :one
SELECT id, email, created_at FROM users
WHERE id = $1 LIMIT 1
`

func (q *Queries) GetUser(ctx context.Context, id string) (User, error) {
	row := q.db.QueryRow(ctx, getUser, id)
	var i User
	err := row.Scan(&i.ID, &i.Email, &i.CreatedAt)
	return i, err
}
